name: Test and Publish JupyterLab C++ Docker Image

on:
  schedule:
    - cron: '0 0 1 * *' # At 00:00 on day-of-month 1.
  workflow_dispatch: # Allows manual trigger.
  push:
    tags:
      - 'v*'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Automatically increment tag
      - name: Increment tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.26.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor # Set to major, minor, or patch as per your versioning

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t jupyterlab_cpp .

      - name: Run C++ Notebook Test
        run: |
          docker run -d --name cpp_test -v ${{ github.workspace }}/notebooks/:/workspace/notebooks/ jupyterlab_cpp jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.token='' --no-browser
          sleep 10
          docker exec cpp_test jupyter nbconvert --to notebook --execute /workspace/notebooks/cpp_kernel_test.ipynb

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Push Docker Image with the tag version
      - name: Push Docker Image with the tag version
        run: |
          docker tag jupyterlab_cpp ${{ secrets.DOCKERHUB_USERNAME }}/jupyterlab_cpp:latest
          docker tag jupyterlab_cpp ${{ secrets.DOCKERHUB_USERNAME }}/jupyterlab_cpp:${{ steps.tag_version.outputs.new_tag }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jupyterlab_cpp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jupyterlab_cpp:${{ steps.tag_version.outputs.new_tag }}

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
